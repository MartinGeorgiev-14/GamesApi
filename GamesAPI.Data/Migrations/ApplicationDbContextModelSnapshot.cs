// <auto-generated />
using GamesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamesAPI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GamesAPI.Data.Models.GamesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("EU_Sales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GenreModelId")
                        .HasColumnType("int");

                    b.Property<decimal>("JP_Sales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NA_Sales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Other_Sales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublisherModelId")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreModelId");

                    b.HasIndex("PublisherModelId");

                    b.HasIndex("YearId");

                    b.ToTable("GamesModels");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.GamesPlatformMTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GamesModelId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GamesModelId");

                    b.HasIndex("PlatformModelId");

                    b.ToTable("GamesPlatformMTMs");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.GenreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenreModels");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.PlatformModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformModels");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.PublisherModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PublisherModels");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.YearModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("YearModels");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.GamesModel", b =>
                {
                    b.HasOne("GamesAPI.Data.Models.GenreModel", "GenreModel")
                        .WithMany("GamesModels")
                        .HasForeignKey("GenreModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesAPI.Data.Models.PublisherModel", "PublisherModel")
                        .WithMany("GamesModels")
                        .HasForeignKey("PublisherModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesAPI.Data.Models.YearModel", "Year")
                        .WithMany("GamesModels")
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenreModel");

                    b.Navigation("PublisherModel");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.GamesPlatformMTM", b =>
                {
                    b.HasOne("GamesAPI.Data.Models.GamesModel", "GamesModel")
                        .WithMany()
                        .HasForeignKey("GamesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesAPI.Data.Models.PlatformModel", "PlatformModel")
                        .WithMany()
                        .HasForeignKey("PlatformModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GamesModel");

                    b.Navigation("PlatformModel");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.GenreModel", b =>
                {
                    b.Navigation("GamesModels");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.PublisherModel", b =>
                {
                    b.Navigation("GamesModels");
                });

            modelBuilder.Entity("GamesAPI.Data.Models.YearModel", b =>
                {
                    b.Navigation("GamesModels");
                });
#pragma warning restore 612, 618
        }
    }
}
